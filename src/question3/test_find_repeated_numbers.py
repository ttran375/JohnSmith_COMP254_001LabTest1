import pytest
from .find_repeated_numbers import find_repeated_numbers


test_cases = [
    ([1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5]),
    ([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6], [1, 2, 3, 4, 5]),
    ([5, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4], [1, 2, 3, 4, 5]),
    ([7, 8, 9, 10, 11, 7, 8, 9, 10, 11, 12, 13], [7, 8, 9, 10, 11]),
    ([1, 2, 3, 1, 2, 3, 4, 4, 5, 5, 6, 7], [1, 2, 3, 4, 5]),
    ([10, 20, 30, 40, 50, 10, 20, 30, 40, 50, 60, 70], [10, 20, 30, 40, 50]),
    ([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6], [1, 2, 3, 4, 5]),
    ([6, 6, 5, 5, 4, 4, 3, 3, 2, 2, 1], [2, 3, 4, 5, 6]),
    ([1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5], [1, 2, 3, 4, 5]),
    ([6, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4], [1, 2, 3, 4, 6]),
    ([1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1]),
    ([10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1], [1]),
    ([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10], [10]),
    ([10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10], [10]),
    (
        [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5],
    ),
    (
        [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1],
        [1, 2, 3, 4, 5],
    ),
    (
        [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15],
        [1, 2, 3, 4, 5],
    ),
    (
        [15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 6],
        [6, 7, 8, 9, 10],
    ),
    ([3, 1, 4, 5, 2, 3, 1, 4, 5, 2, 6], [1, 2, 3, 4, 5]),
    ([11, 12, 13, 14, 15, 11, 12, 13, 14, 15, 16], [11, 12, 13, 14, 15]),
    ([20, 21, 22, 23, 24, 20, 21, 22, 23, 24, 25], [20, 21, 22, 23, 24]),
    ([30, 31, 32, 33, 34, 30, 31, 32, 33, 34, 35], [30, 31, 32, 33, 34]),
    ([40, 41, 42, 43, 44, 40, 41, 42, 43, 44, 45], [40, 41, 42, 43, 44]),
    ([50, 51, 52, 53, 54, 50, 51, 52, 53, 54, 55], [50, 51, 52, 53, 54]),
    ([60, 61, 62, 63, 64, 60, 61, 62, 63, 64, 65], [60, 61, 62, 63, 64]),
    ([70, 71, 72, 73, 74, 70, 71, 72, 73, 74, 75], [70, 71, 72, 73, 74]),
    ([80, 81, 82, 83, 84, 80, 81, 82, 83, 84, 85], [80, 81, 82, 83, 84]),
    ([90, 91, 92, 93, 94, 90, 91, 92, 93, 94, 95], [90, 91, 92, 93, 94]),
    (
        [100, 101, 102, 103, 104, 100, 101, 102, 103, 104, 105],
        [100, 101, 102, 103, 104],
    ),
    (
        [110, 111, 112, 113, 114, 110, 111, 112, 113, 114, 115],
        [110, 111, 112, 113, 114],
    ),
    (
        [120, 121, 122, 123, 124, 120, 121, 122, 123, 124, 125],
        [120, 121, 122, 123, 124],
    ),
    (
        [130, 131, 132, 133, 134, 130, 131, 132, 133, 134, 135],
        [130, 131, 132, 133, 134],
    ),
    (
        [140, 141, 142, 143, 144, 140, 141, 142, 143, 144, 145],
        [140, 141, 142, 143, 144],
    ),
    (
        [150, 151, 152, 153, 154, 150, 151, 152, 153, 154, 155],
        [150, 151, 152, 153, 154],
    ),
    (
        [160, 161, 162, 163, 164, 160, 161, 162, 163, 164, 165],
        [160, 161, 162, 163, 164],
    ),
    (
        [170, 171, 172, 173, 174, 170, 171, 172, 173, 174, 175],
        [170, 171, 172, 173, 174],
    ),
    (
        [180, 181, 182, 183, 184, 180, 181, 182, 183, 184, 185],
        [180, 181, 182, 183, 184],
    ),
    (
        [190, 191, 192, 193, 194, 190, 191, 192, 193, 194, 195],
        [190, 191, 192, 193, 194],
    ),
    (
        [200, 201, 202, 203, 204, 200, 201, 202, 203, 204, 205],
        [200, 201, 202, 203, 204],
    ),
    (
        [210, 211, 212, 213, 214, 210, 211, 212, 213, 214, 215],
        [210, 211, 212, 213, 214],
    ),
    (
        [220, 221, 222, 223, 224, 220, 221, 222, 223, 224, 225],
        [220, 221, 222, 223, 224],
    ),
    (
        [230, 231, 232, 233, 234, 230, 231, 232, 233, 234, 235],
        [230, 231, 232, 233, 234],
    ),
    (
        [240, 241, 242, 243, 244, 240, 241, 242, 243, 244, 245],
        [240, 241, 242, 243, 244],
    ),
    (
        [250, 251, 252, 253, 254, 250, 251, 252, 253, 254, 255],
        [250, 251, 252, 253, 254],
    ),
    (
        [260, 261, 262, 263, 264, 260, 261, 262, 263, 264, 265],
        [260, 261, 262, 263, 264],
    ),
    (
        [270, 271, 272, 273, 274, 270, 271, 272, 273, 274, 275],
        [270, 271, 272, 273, 274],
    ),
    (
        [280, 281, 282, 283, 284, 280, 281, 282, 283, 284, 285],
        [280, 281, 282, 283, 284],
    ),
    (
        [290, 291, 292, 293, 294, 290, 291, 292, 293, 294, 295],
        [290, 291, 292, 293, 294],
    ),
    (
        [300, 301, 302, 303, 304, 300, 301, 302, 303, 304, 305],
        [300, 301, 302, 303, 304],
    ),
    (
        [310, 311, 312, 313, 314, 310, 311, 312, 313, 314, 315],
        [310, 311, 312, 313, 314],
    ),
    (
        [320, 321, 322, 323, 324, 320, 321, 322, 323, 324, 325],
        [320, 321, 322, 323, 324],
    ),
    (
        [330, 331, 332, 333, 334, 330, 331, 332, 333, 334, 335],
        [330, 331, 332, 333, 334],
    ),
    (
        [340, 341, 342, 343, 344, 340, 341, 342, 343, 344, 345],
        [340, 341, 342, 343, 344],
    ),
    (
        [350, 351, 352, 353, 354, 350, 351, 352, 353, 354, 355],
        [350, 351, 352, 353, 354],
    ),
    (
        [360, 361, 362, 363, 364, 360, 361, 362, 363, 364, 365],
        [360, 361, 362, 363, 364],
    ),
    (
        [370, 371, 372, 373, 374, 370, 371, 372, 373, 374, 375],
        [370, 371, 372, 373, 374],
    ),
    (
        [380, 381, 382, 383, 384, 380, 381, 382, 383, 384, 385],
        [380, 381, 382, 383, 384],
    ),
    (
        [390, 391, 392, 393, 394, 390, 391, 392, 393, 394, 395],
        [390, 391, 392, 393, 394],
    ),
    (
        [400, 401, 402, 403, 404, 400, 401, 402, 403, 404, 405],
        [400, 401, 402, 403, 404],
    ),
    (
        [410, 411, 412, 413, 414, 410, 411, 412, 413, 414, 415],
        [410, 411, 412, 413, 414],
    ),
    (
        [420, 421, 422, 423, 424, 420, 421, 422, 423, 424, 425],
        [420, 421, 422, 423, 424],
    ),
    (
        [430, 431, 432, 433, 434, 430, 431, 432, 433, 434, 435],
        [430, 431, 432, 433, 434],
    ),
    (
        [440, 441, 442, 443, 444, 440, 441, 442, 443, 444, 445],
        [440, 441, 442, 443, 444],
    ),
    (
        [450, 451, 452, 453, 454, 450, 451, 452, 453, 454, 455],
        [450, 451, 452, 453, 454],
    ),
    (
        [460, 461, 462, 463, 464, 460, 461, 462, 463, 464, 465],
        [460, 461, 462, 463, 464],
    ),
    (
        [470, 471, 472, 473, 474, 470, 471, 472, 473, 474, 475],
        [470, 471, 472, 473, 474],
    ),
    (
        [480, 481, 482, 483, 484, 480, 481, 482, 483, 484, 485],
        [480, 481, 482, 483, 484],
    ),
    (
        [490, 491, 492, 493, 494, 490, 491, 492, 493, 494, 495],
        [490, 491, 492, 493, 494],
    ),
    (
        [500, 501, 502, 503, 504, 500, 501, 502, 503, 504, 505],
        [500, 501, 502, 503, 504],
    ),
]


@pytest.mark.parametrize("input_arr, expected_output", test_cases)
def test_find_repeated_numbers(input_arr, expected_output):
    assert find_repeated_numbers(input_arr) == expected_output
