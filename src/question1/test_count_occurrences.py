import sys
import pytest
from count_occurrences import count_occurrences


sys.setrecursionlimit(1500)


@pytest.mark.parametrize(
    "arr, target, expected",
    [
        ([1, 2, 3, 4, 2, 2, 5, 2, 6], 2, 4),
        ([1, 3, 4, 5, 6], 2, 0),
        ([], 2, 0),
        ([1, 2, 3, 4, 5], 5, 1),
        ([2, 2, 2, 2], 2, 4),
        ([1, 2, 3, 4, 5], 7, 0),
        ([1], 1, 1),
        ([1], 2, 0),
        ([1, 2, 3, 1, 1, 1, 4, 1, 5], 1, 5),
        ([1, 1, 1, 1, 1, 1, 1, 1, 1], 1, 9),
        ([1, 1, 1, 1, 1, 1, 1, 1, 1], 2, 0),
        ([10, 20, 30, 10, 10, 40, 50], 10, 3),
        ([10, 20, 30, 40, 50], 60, 0),
        ([7, 7, 7, 7, 7, 7], 7, 6),
        ([0, 1, 0, 1, 0, 1], 0, 3),
        ([0, 1, 0, 1, 0, 1], 1, 3),
        ([0, 0, 0, 0, 0], 0, 5),
        ([100, 200, 300, 100, 200, 100, 300, 100], 100, 4),
        ([-1, -2, -3, -1, -1, -4, -1, -5], -1, 4),
        ([1.5, 2.5, 1.5, 1.5, 3.5], 1.5, 3),
        ([1.5, 2.5, 3.5, 4.5], 5.5, 0),
        (["a", "b", "c", "a", "a", "d", "a"], "a", 4),
        (["a", "b", "c", "d", "e"], "f", 0),
        ([True, False, True, True, False], True, 3),
        ([True, False, True, True, False], False, 2),
        ([None, None, None, None], None, 4),
        ([1, 2, 3, None, 4, None, 5], None, 2),
        (["apple", "banana", "apple", "cherry"], "apple", 2),
        (["apple", "banana", "cherry"], "orange", 0),
        (list(range(1000)), 500, 1),
        (list(range(1000)), 1001, 0),
        (list(range(1000)), 0, 1),
        ([1, 2, 3] * 100, 2, 100),
        ([1] * 1000, 1, 1000),
        ([1] * 1000, 2, 0),
        (["a"] * 1000, 2, 0),
        (["a"] * 1000, "a", 1000),
        (["a"] * 1000, "b", 0),
        ([1, 2, 3, 4, 5] * 200, 3, 200),
        ([1] * 500 + [2] * 500, 2, 500),
        ([1] * 500 + [2] * 500, 1, 500),
        ([2] * 1000, 2, 1000),
        ([2] * 999 + [1], 1, 1),
        ([2] * 999 + [1], 2, 999),
        ([3.14, 2.71, 3.14, 1.61, 3.14], 3.14, 3),
        ([3.14, 2.71, 3.14, 1.61, 3.14], 2.71, 1),
        ([3.14, 2.71, 3.14, 1.61, 3.14], 1.61, 1),
        ([1.1, 2.2, 3.3, 4.4, 5.5], 1.1, 1),
        ([1.1, 2.2, 3.3, 4.4, 5.5], 5.5, 1),
        ([1.1, 2.2, 3.3, 4.4, 5.5], 6.6, 0),
    ],
)
def test_count_occurrences(arr, target, expected):
    assert count_occurrences(arr, target) == expected
